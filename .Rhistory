data(DNase)
help(DNase)
View(DNase)
plot(1:100, 1:100, log='xy')
?t.test
DNase2 = DNase[which(DNase$Run==2),]
DNase3 = DNase[which(DNase$Run==3),]
t.test(DNase2$density,DNase3$density,paired=TRUE)
data(cars)
info(cars)
cars
class(cars)
dim(cars)
len(cars[,1])
length(cars[,1])
class(cars[,1])
class(dim(cars[,1]))
class(dim(cars))
http://www.bioconductor.org/packages/2.11/bioc/html/limma.html
#Limma
source("http://bioconductor.org/biocLite.R")
biocLite("estrogen")
dir(datadir)
datadir <- file.path(.find.package("estrogen"),"extdata")
datadir <- file.path(find.package("estrogen"),"extdata")
datadir
dir(datadir)
targets<-readTargets("phenoData.txt",path=datadir,sep="",row.names="filename")
library(limma)
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
library(limma)
targets<-readTargets("phenoData.txt",path=datadir,sep="",row.names="filename")
targets
ab<-ReadAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
ab<-readAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
library(affy)
ab<-ReadAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
class(ab)
ab
eset<-rma(ab)
class(eset)
eset
targets
targets[2]
TS <- paste(targets[,2],targets[,3],sep="")
TS
factor(TS)
~TS
TS <- factor(TS)
~TS
~TS-1
model.matrixTS-1
TS-1
TS
design <- model.matrix(~TS-1)
design
colnames(design)<-levels(TS)
design
fit1=lmFit(eset,design)
fot1
fit1
class(exprs(eset))
head(exprs(eset))
fit1=lmFit(exprs(eset),design)
source('~/.active-rstudio-document')
#Preprocessing of microarray data?
library(limma)
library(estrogen)
library(affy)
datadir <- file.path(find.package("estrogen"),"extdata")
targets<-readTargets("phenoData.txt",path=datadir,sep="",row.names="filename")
ab<-ReadAffy(filenames=targets$filename,celfile.path=datadir,phenoData=targets)
eset<-rma(ab)
ab
class(ab)
library(cdf)
cdfName(ab)
image(ab)
ab
cdfName(ab())
cdfName(ab)
ab[1]
image(ab[1])
probe.datamatrix <- exprs(ab)
dim(probe.datamatrix)
length(probeNames(ab))
boxplot(ab)
x <- exprs(eset)
eset2 <- gcrma(ab)
library("gcrma")
biocLite("gcrma")
library(gcrma)
x <- exprs(eset)
eset2 <- gcrma(ab)
dim(x)
head(x)
m <- x[,1]-x[,2]
a <- (x[,1]+x[,2])/2
plot(a,m)
plot(m~a)
plot(m~a, pch=16)
plot(m~a, pch=16, cex=0.2)
design
fit1=lmFit(eset,design)
fit2=lmFit(exprs(eset),design)
fita=lmFit(exprs(eset),design)
cont.matrix = makeContrasts(TIME=absent48-absent10, E48=present48-absent48, levels=design)
cont.matrix
fit2
names(fit2)
fit2 = contrasts.fit(fit1, cont.matrix)
fit2 = eBayes(fit2)
names(fit2)
fit2$coefficients
fit2$coef
head(fit2$coef)
which.max(fit2$coef[,1])
topTable(fit2, coef=2, number=15)
qchisq(0.005, 35)
qchisq(0.995, 35)
setwd("~/GitHub/tango/src")
tud <- as.matrix(read.table('hatful60TUD.tsv'))
d <- dist(tud)
fit <- hclist(d)
fit <- hclust(d)
plot(fit)
d <- dist(tud, method='euclidean')
# clustering on TUD distance
tud <- as.matrix(read.table('~/GitHub/tango/src/hatful60TUD.tsv'))
d <- dist(tud, method='euclidean')
# try different clustering methods
fit1 <- hclust(d,method='ward')
fit2 <- hclust(d,method='complete')
fit3 <- hclust(d,method='single')
fit4 <- hclust(d,method='median')
par(mfrow=c(2,2))
plot(fit1)
plot(fit2)
plot(fit3)
plot(fit4)
d
library(ape)
setwd("~/GitHub/tango")
metadata <- as.data.frame(read.table('data/phagesDB/sequenced_names_clusters.txt', header=T))
dev.4 <- as.matrix(read.table('data/kmer_counts/663_phage/all_dev_k4.tsv'))
dev.4.clusters <- dev.4
rownames(dev.4.clusters) <- lapply(rownames(dev.4.clusters), function(x) strsplit(strsplit(x,'\\(')[[1]][2],'\\)')[[1]][1])
dev.4.clusters.log <- log2(dev.4.clusters)
dist.4 <- dist(dev.4.clusters)
nj.4 <- nj(dist.4)
plot(nj.4)
dist.4.log <- dist(dev.4.clusters.log)
nj.4.log <- nj(dist.4.log)
plot(hclust(dist.4.log))
dist.4.log <- dist(dev.4.clusters.log)
dev.4.clusters.log
dev.4.clusters.log <- log2(dev.4.clusters+0.00001)
dist.4.log <- dist(dev.4.clusters.log)
plot(hclust(dist.4.log))
install.packages("pvclust")
library(pvclust)
result <- pvclust(dev.4.clusters, method.dist="cor", method.hclust="average", nboot=100)
plot(result)
result <- pvclust(t(dev.4.clusters), method.dist="cor", method.hclust="average", nboot=100)
plot(result)
msplot(resut)
msplot(result)
dev.off()
dev.off()
msplot(result)
msplot(result)
plot.pvclust(result)
print(result)
plot(result)
pvpick(result)
lines(result)
dev.4.subset<- as.matrix(read.table('data/kmer_counts/Hatfull_60_subset/Hatful_60_dev_k4.tsv))
dev.4.subset<- as.matrix(read.table('data/kmer_counts/Hatfull_60_subset/Hatful_60_dev_k4.tsv'))
dev.4.subset<- as.matrix(read.table('data/kmer_counts/Hatfull_60_subset/Hatful_60_dev_k4.tsv'))
res.subset <- pvclust(t(dev.4.subset))
plot(res.subset)
lines(res.subset)
seplot(res.subset)
seplot(res.subset, identify = T)
print(result, which=c(15, 29))
seplot(res.subset, identify=TRUE)
print(res.subset, which=c(15, 29))
plot(result)
plot(result, cex=.75)
plot(result, cex=.5)
plot(result, cex=1.5)
plot(result, cex=.25)
plot(result, cex=.25)
library(pvclust)
plot(result, cex=.25)
plot(result, cex=.25, cex.lab=0.5)
plot(result)
pdf('figures//bootstrap_trees//663_100boot.pdf')
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = 8)
plot(result)
dev.off()
dev.off()
dev.off()
dev.off()
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = 8)
plot(result)
dev.off()
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = 8, width = 30, height=15)
plot(result)
dev.off()
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = , width = 30, height=15)
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = 6, width = 30, height=15)
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = 6, width = 30, height=15)
plot(result)
dev.off()
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = 6, width = 40, height=8)
dev.off()
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = 6, width = 40, height=8)
dev.off()
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = 6, width = 40, height=8)
plot(result)
dev.off()
seplot(res.subset)
seplot(result)
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = 6, width = 50, height=8)
pdf('figures//bootstrap_trees//663_100boot.pdf',pointsize = 6, width = 50, height=8)
plot(result)
dev.off()
plot(res.subset)
print(res.subset, which=c(2,3))
pdf('figures//bootstrap_trees//H60_1kboot.pdf',pointsize = 6, width = 50, height=8)
plot(res.subset)
dev.off()
gd.3 <- as.matrix(read.table('data/gene_analysis/wlidcat_gene_dev3.txt', delimiter=','))
gd.3 <- as.matrix(read.table('data/gene_analysis/wlidcat_gene_dev3.txt', sep=','))
dim(gd.3)
gd.3 <- as.matrix(read.table('data/gene_analysis/wlidcat_gene_dev3.txt', sep=','))
gd.4 <- as.matrix(read.table('data/gene_analysis/wlidcat_gene_dev4.txt', sep=','))
c3 <- cor(gd.3)
matshow(c3)
heatmap(c3)
heatmap(c3, rowv=NA)
heatmap(c3, rowV=NA, colV=NA)
heatmap(c3, Rowv = NA, Colv=NA)
c4 <- cor(gd.4)
heatmap(c4, Rowv = NA, Colv=NA)
c4 <- cor(t(gd.4)
)
c4 <- cor(t(gd.4))
heatmap(c4, Rowv = NA, Colv=NA)
c3 <- cor(t(gd.3))
heatmap(c3, Rowv = NA, Colv=NA)
heatmap(c3, Rowv = NA, Colv=NA,revC = T)
imshow(c3)
image(c3)
image(c4)
plot(hclust(gd.3))
plot(hclust(dist(gd.3)))
plot(hclust(dist(gd.4)))
heatmap(c3, Rowv = NA, Colv=NA,revC = T, cmap='gist_heat')
heatmap(c3, Rowv = NA, Colv=NA,revC = T, colormap='gist_heat')
heatmap(c3, Rowv = NA, Colv=NA,revC = T, col='gist_heat')
heatmap(c3, Rowv = NA, Colv=NA,revC = T, col=rainbow(256))
heatmap(c3)
heatmap(c4)
levelplot
gd.3[gd.3==0] <- NA
heatmap(c4)
gd.3[1[]
c
gd.3[1]
gd.3[1,]
gd.4[gd.4==0] <- NA
gd.4[1,]
source('~/.active-rstudio-document')
print(res.subset)
print(res.subset, digits=5)
heatmap(c4, Rowv = NA, Colv=NA)
heatmap(c4)
vals <- as.matrix(read.table('data/bootstrap_trees/H60_1kboot_data.txt',skip = 5))
vals
vals[1:5,1:5]
vals.splits <- vals[cluster_splits,]
cluster_splits <- c(39,37,14,43,38,42,12,22,3,41,17,44,27,37,36,16,19,40,9)
vals.splits <- vals[cluster_splits,]
vals.splits
vals.nosplits <- vals[rownames(vals) not in cluster_splits, ]
vals.nosplits <- vals[rownames(vals) not %in% cluster_splits, ]
rownames(vals)
int(rownames(vals))
1:59
vals.nosplits <- vals[1:59 not %in% cluster_splits, ]
1:59 - cluster_splits
1:59 %in% cluster_splits
1:59 not %in% cluster_splits
1:59 !%in% cluster_splits
1:59 %not in% cluster_splits
[1:59 %in% cluster_splits] * -1
c(1:59 %in% cluster_splits) * -1
c(1:59 %in% cluster_splits) * False
c(1:59 %in% cluster_splits)
vals.nosplits <- vals[!(1:59 %in% cluster_splits), ]
vals.nosplits
par(mfrow=c(1,2))
plot(hist(vals.splits[, 1]))
plot(hist(vals.nosplits[, 1]))
plot(hist(vals.splits[, 1]))
par(mfrow=c(2,2))
plot(hist(vals.splits[, 1]))
plot(hist(vals.nosplits[, 1]))
plot(hist(vals[, 1]))
plot(hist(vals.splits[, 1]))
var(vals.splits[,1])
var(vals.nosplits[,1])
plot(hist(1-vals.splits[, 1]))
plot(hist(1-vals.nosplits[, 1]))
t.test(vals.splits[,1], vals.nosplits[,1])
t.test(vals.splits[,1], vals[,1])
t.test(vals.splits[,1], vals.nosplits[,1],paired = T)
t.test(vals.splits[,1], vals.nosplits[,1])
vals.all <- vals[,]
par(mfrow=c(2,2))
plot(hist(1-vals.splits[, 1]))
hist(1-vals.splits[, 1])
par(mfrow=c(2,2))
hist(1-vals.splits[, 1])
hist(1-vals.nosplits[, 1])
hist(1-vals[, 1])
